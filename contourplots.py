# -*- coding: utf-8 -*-
"""contourplots.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N8wBOkkoCz3EvBmpR9h8ddOcHnhpLcgE
"""

import numpy as np
import pandas as pd


#Plotting Function
def df_to_contour(dataframe ,x_title, y_title, z_title,fileout):
    # This function reshapes a dataframe into a matrix for plotting
    # dataframe: your input data frame with x,y,z variables as columns
    # x/y/z_title: [string] title of the respective column of the dataframe
    # fileout: the file location that you would like to save the matrix 
    Z = dataframe.pivot_table(index=y_title, columns=x_title, values=z_title, dropna=False)
    X_unique = np.sort(dataframe[x_title].unique())
    Y_unique = np.sort(dataframe[y_title].unique())
    X, Y = np.meshgrid(X_unique, Y_unique)
    np.savetxt(fileout, Z, delimiter=",")
    return(X,Y,Z)
    
fileout = 
X, Y, Z = df_to_contour(data_mof, 'T', 'W', 'Eff_MOF',fileout)
length = np.linspace(0,100,25)
fig1, ax1 = plt.subplots()
cs1 = ax1.contourf(X, Y, Z, length, cmap="plasma_r")
cbar = fig1.colorbar(cs1)
for RH in np.arange(0.1, 1.1, 0.1):
    W = CP.HAPropsSI("W","R",RH,"P",101325,"T",T)
    plt.plot(T, W, color= 'k' if (RH == 1) else 'w', lw=1 if (RH== 1) else 0.4)

ax1.set_title('Optimal Recovery Ratio for Dew')
ax1.set_xbound(285, 325)
ax1.set_ybound(0.004, 0.04)